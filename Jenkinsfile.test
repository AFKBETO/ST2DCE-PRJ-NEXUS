properties([
	[$class: 'BuildDiscarderProperty', strategy: [$class: 'LogRotator', numToKeepStr: '5', artifactNumToKeepStr: '', artifactDaysToKeepStr: '', daysToKeepStr: '']],
	parameters([
		booleanParam(name: 'majorPatch', defaultValue: false, description: 'Check this box to create a new major patch')
	]),
	disableConcurrentBuilds(),
	disableResume(),
])

pipeline {
	agent any
	stages{
		stage('Test application') {
			steps {
				script {
					echo 'Testing application...'
					result = sh(script: 'curl -s -o /dev/null -I -w "%{http_code}" https://kube.minhviet.cc/dev', returnStdout: true)
					if (result == '200') {
						echo 'Application is running'
					} else {
						error 'Application is not running'
					}
				}
			}
		}

		stage('Create a release branch') {
			steps {
				script {
					tag = sh(script: 'git describe --tags --abbrev=0', returnStdout: true).trim()
					echo "Current tag is: $tag"
					//remove v
					tag = tag.substring(1)
					tag = tag.tokenize('.').collect{it as int}
					if (params.majorPatch) {
						tag[1]++
						tag[2]=0
					} else {
						tag[2]++
					}
					tag = 'v' + tag.join('.')
					sh """
						git checkout main
						git checkout -b release/$tag
					"""
				}
			}
		}

		stage('Push a new tag on GitHub') {
			steps {
				script {
					sh """
						# checkout to release branch
						git checkout release/$tag

						# create and push tag
						git tag -a $tag -m "Release $tag"
						git push origin $tag

						# cleanup release branch
						git checkout main
						git branch -D release/$tag
					"""
				}
			}
		}
	}
}
