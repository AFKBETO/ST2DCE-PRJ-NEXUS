grafana:
  ingress:
    ## If true, Grafana Ingress will be created
    ##
    enabled: true

    ## IngressClassName for Grafana Ingress.
    ## Should be provided if Ingress is enable.
    ##
    ingressClassName: traefik

    annotations: 
      kubernetes.io/ingress.allow-http: "false"
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/router.middlewares: prometheus-stripprefix@kubernetescrd
      ingress.kubernetes.io/ssl-redirect: "false"
      cert-manager.io/issuer: prod-issuer
      cert-manager.io/issuer-kind: OriginIssuer
      cert-manager.io/issuer-group: cert-manager.k8s.cloudflare.com

    ## Hostnames.
    ## Must be provided if Ingress is enable.
    ##
    # hosts:
    #   - grafana.domain.com
    hosts:
      - kube.minhviet.cc

    ## Path for grafana ingress
    path: /grafana
    pathType: Prefix

    ## TLS configuration for grafana Ingress
    ## Secret must be manually created in the namespace
    ##
    tls:
      - secretName: grafana-tls
        hosts:
          - kube.minhviet.cc
    # - secretName: grafana-general-tls
    #   hosts:
    #   - grafana.example.com

  # # To make Grafana persistent (Using Statefulset)
  # #
  # persistence:
  #   enabled: true
  #   type: sts
  #   storageClassName: "storageClassName"
  #   accessModes:
  #     - ReadWriteOnce
  #   size: 20Gi
  #   finalizers:
  #     - kubernetes.io/pvc-protection

  service:
    type: LoadBalancer
    port: 8033
    targetPort: 3000

  grafana.ini:
    server:
      root_url: /grafana

  admin:
  ## Name of the secret. Can be templated.
    existingSecret: grafana-auth-secret
    userKey: admin-user
    passwordKey: admin-password

prometheusOperator:
  namespaces:
    releaseNamespace: true
    additional:
      - devops-dev
      - devops-prod
      - ns-welhome
